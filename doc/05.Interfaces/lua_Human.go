// Code generated by gobindlua; DO NOT EDIT.
package interfaces

import (
	"fmt"

	"github.com/ChrisTrenkamp/gobindlua"
	lua "github.com/yuin/gopher-lua"
)

func (goType *Human) RegisterLuaType(L *lua.LState) {
	staticMethodsTable := L.NewTypeMetatable("human")
	L.SetGlobal("human", staticMethodsTable)
	L.SetField(staticMethodsTable, "new", L.NewFunction(luaConstructorHumanNewHuman))

	fieldsTable := L.NewTypeMetatable(goType.LuaMetatableType())
	L.SetGlobal(goType.LuaMetatableType(), fieldsTable)
	L.SetField(fieldsTable, "__index", L.NewFunction(luaAccessHuman))
	L.SetField(fieldsTable, "__newindex", L.NewFunction(luaSetHuman))
}

func luaConstructorHumanNewHuman(L *lua.LState) int {

	r0 := NewHuman()

	L.Push(gobindlua.NewUserData(&r0, L))

	return 1
}

func (r *Human) LuaMetatableType() string {
	return "human_fields"
}

func luaCheckHuman(param int, L *lua.LState) *Human {
	ud := L.CheckUserData(param)
	if v, ok := ud.Value.(*Human); ok {
		return v
	}
	L.ArgError(1, "Human expected")
	return nil
}

func luaAccessHuman(L *lua.LState) int {
	p2 := L.CheckString(2)

	switch p2 {
	case "sound":
		L.Push(L.NewFunction(luaMethodHumanSound))

	default:
		L.Push(lua.LNil)
	}

	return 1
}

func luaSetHuman(L *lua.LState) int {
	p2 := L.CheckString(2)

	switch p2 {

	default:
		L.ArgError(2, fmt.Sprintf("unknown field %s", p2))
	}

	return 0
}

func luaMethodHumanSound(L *lua.LState) int {
	r := luaCheckHuman(1, L)

	r0 := r.Sound()

	L.Push((lua.LString)(r0))

	return 1
}
